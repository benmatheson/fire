install.packages("pdftools")
install.packages("pdftools")
source('~/fire/pdf_script.R', echo=TRUE)
txt <- pdf_text("current.pdf")
txt
toc <- pdf_toc("current.pdf")
toc
cat(txt[18])
check <- cat(txt[18])
check <- cat(txt[1])
check <- cat(txt[2])
check <- txt[2]
check
jsonlite::toJSON(toc, auto_unbox = TRUE, pretty = TRUE)
j <- jsonlite::toJSON(toc, auto_unbox = TRUE, pretty = TRUE)
j <- jsonlite::toJSON(txt, auto_unbox = TRUE, pretty = TRUE)
j
View(j)
View(txt)
View(txt)
View(txt)
check <- txt[2]
check <- txt[3]
check
check <- txt[1]
check <- txt[1]
check
check <- txt[1]
check <- txt[1][2]
check
check <- txt[1]
check
datacheck <-data.frame(check)
datacheck
install.packages('tabulizer')
if (!require("ghit")) {
install.packages("ghit")
}
check <- txt[1]
check
1 <- txt[1]
one <- txt[1]
one
library(stringr)
str_split(one)
library(tabulizer)
library(ghit)
ghit::install_github(c("ropensci/tabulizerjars", "ropensci/tabulizer"))
> ghit::install_github(c("ropensci/tabulizerjars", "ropensci/tabulizer"))
library(tabulizer)
ghit::install_github(c("ropensci/tabulizerjars", "ropensci/tabulizer"))
library(tabulizer)
?excel
install.packages("XLConnect")
library(XLConnect)
install.packages("xlsx")
library(xlsx)
?rjava
ex <- download.file("https://fire.ak.blm.gov/content/aicc/sitreport/sit%20query.xlsx")
ex <- download.file("https://fire.ak.blm.gov/content/aicc/sitreport/sit%20query.xlsx", query.xlsx)
ex <- download.file("https://fire.ak.blm.gov/content/aicc/sitreport/sit%20query.xlsx", "query.xlsx")
ex2 <- read.table("query.xlsx")
read.table
?read.table
ex2 <- read.table("query.xlsx", header = T )
ex2 <- read.table("query.xlsx", header = F )
?readxl
library(readxl)
remove.packages('XLConnect')
installed.packages()
?read_xlsx()
ex <- read_xlsx("query.xlsx")
read(ex)
head(ex)
View(ex)
?date
var current_date <- date()
current_date <- date()
current_date
library(sp)
library(rgdal)
install.packages('rgdal')
library(sp)
library(rgdal)
head(fires)
fires <- download.file("https://fire.ak.blm.gov/content/aicc/sitreport/sit%20query.xlsx", "query.xlsx")
fires <- read_xlsx("query.xlsx")
firesSP <- SpatialPointsDataFrame(fires$)
head(fires)
firesSP <- SpatialPointsDataFrame(fires$LATITUDE, fires$LONGITUDE)
firesSP <- SpatialPointsDataFrame([,fires$LATITUDE], [,fires$LONGITUDE])
firesSP <- SpatialPointsDataFrame(,fires$LATITUDE, [,fires$LONGITUDE)
head(fires)
current_date <- date()
#create summary stuatistics
'head(ex)
View(ex)
txt <- pdf_text("current.pdf")
one <- txt[1]
one
str_split(one)
ex <-  readxl:
#fires <- download.file("https://fire.ak.blm.gov/content/aicc/sitreport/current.pdf", "current.pdf", mode = "wb")
firesSP <- SpatialPointsDataFrame(,fires$LATITUDE, ,fires$LONGITUDE)
firesSP <- SpatialPointsDataFrame(,fires$LATITUDE,fires$LONGITUDE)
firesSP <- SpatialPointsDataFrame(fires$LATITUDE,fires$LONGITUDE)
firesSP <- SpatialPointsDataFrame(fires$LATITUDE,fires$LONGITUDE)
dfd
firesSP <- SpatialPointsDataFrame(fires$LATITUDE, fires$LONGITUDE)
firesSP <- coordinates(fires) <- ~ LONGITUDE + LATITUDE;
coordinates(fires) <- ~ LONGITUDE + LATITUDE;
coordinates(fires) <- ~ LONGITUDE + LATITUDE
coordinates(fires) <- ~ LONGITUDE + LATITUDE
plot(fires)
writeOGR(fires, 'fires.geojson', 'fires', driver='GeoJSON')
writeOGR(fires, 'fires.geojson', 'fires', driver='GeoJSON')
writeOGR(fires, 'firesgeojson',layer="fires", driver='GeoJSON')
writeOGR(fires, 'firesfile',layer="fires", driver='GeoJSON')
writeOGR(fires, 'firesfile', driver='GeoJSON')
writeOGR(fires, 'fires.geojson',layer="fires", driver='GeoJSON')
head(fires)
head(fires)
writeOGR(fires, 'fires.geojson',layer="fires", driver='GeoJSON')
library(sp)
library(rgdal)
writeOGR(fires, 'fires.geojson',layer="fires", driver='GeoJSON')
writeOGR(fires, 'fires.geojson',layer="fires", driver='GeoJSON')
View(Fires)
View(fires)
str(fires)
install.packages("geojsonio")
library(geojsonio)
firesgj <- geojson_json(fires)
firesdf <- as.data.frame(fires)
coordinates(firesdf) <- ~ LONGITUDE + LATITUDE
writeOGR(firesdf, 'fires.geojson',layer="fires", driver='GeoJSON')
wd <- getwd()
print(wd)
setwd(fires)
setwd("fires")
setwd("fires")
print(wd)
setwd("/fires")
setwd("fire")
wd <- "fire"
print(wd)
setwd("fire")
print(wd)
getwd()
fires <- read_xlsx("query.xlsx")
fires <- download.file("https://fire.ak.blm.gov/content/aicc/sitreport/sit%20query.xlsx", "query.xlsx")
fires <- read_xlsx("query.xlsx")
str(fires)
typeof(fires)
?json
?rjson
library(rjson)
install.packages('rjson')
library(rjson)
?dplyr sort
?dplyr
library(dplyr)
?dyplyr
??`dplyr-package`
?dplyr
browseVignettes(package = "dplyr")
fires <- as.data.frame(fires)
firesSP <- as.data.frame(fires)
coordinates(firesSP) <- ~ LONGITUDE + LATITUDE
head(fires)
currentFires <- filter(fires, OUTDATE=="<NA>" )
currentFires <- filter(fires, OUTDATE=="<NA>")
currentFires <- filter(fires, OUTDATE="<NA>")
currentFires <- filter(fires, OUTDATE=="NA")
currentFires <- filter(fires, OUTDATE=="fla")
head(fires)
typeof(fires$OUTDATE)
currentFires <- filter(fires, OUTDATE<0)
head(fires)
currentFires <- filter(fires, OUTDATE>0)
head(fires)
ommited_fires <- na.omit(fires)
head(ommited_fires)
ommit
ommited_fires
unknonw <- is.na(fires$OUTDATE)
fires$unknown <- is.na(fires$OUTDATE)
head(fires)
fires$burning <- is.na(fires$OUTDATE)
currentFires <- filter(fires, burning==TRUE)
currentFires <- filter(fires, burning==TRUE)
fires <- read_xlsx("query.xlsx")
fires <- as.data.frame(fires)
fires$burning <- is.na(fires$OUTDATE)
head(fires)
currentFires <- filter(fires, burning==TRUE)
View(currentFires)
outFires <- filter(fires, burning==FALSE)
View(outFires)
humanFires <- filter(fires, GENERALCAUSE=="HUMAN")
humanFires <- filter(fires, GENERALCAUSE=="Human")
lighteningFires <- filter(fires, GENERALCAUSE=="Lightening")
lightningFires <- filter(fires, GENERALCAUSE=="Lightning")
mostExpensive <- arrange(fires, desc(ESTIMATEDCOST))
mostExpensive <- arrange(fires, desc(ESTIMATEDTOTALCOST))
mostExpensive <- mostExpensive[10,]
View(mostExpensive)
mostExpensive <- mostExpensive[10, ]
mostExpensive <- arrange(fires, desc(ESTIMATEDTOTALCOST))
mostExpensive <- mostExpensive[1:10, ]
largestFires <- arrange(fires, desc(ESTIMATEDTOTALACRES))
largestFires <- largestFires[1:10,]
largestFires
totalAcerage <- sum(fires$ESTIMATEDTOTALACRES)
totalCost <- sum(fires$ESTIMATEDTOTALCOST)
totalCost
totalCost <- sum(fires$ESTIMATEDTOTALCOST, na.rm=TRUE)
totalAcerage <- sum(fires$ESTIMATEDTOTALACRES, na.rm=TRUE)
totalCost <- sum(fires$ESTIMATEDTOTALCOST, na.rm=TRUE)
length(humanFires)
length(lighteningFires)
count(humanFires)
count(lighteningFires)
count(lighteningFires)
count(humanFires)
count(lightningFires)
col <- c("lightningFiresNumber", "humanFiresNumber", "totalAcerage", "totalCost")
row <- c(lightningFiresNumber, humanFiresNumber, totalAcerage, totalCost)
lightningFiresNumber <- count(lightningFires)
row <- c(lightningFiresNumber, humanFiresNumber, totalAcerage, totalCost)
humanFiresNumber <- count(humanFires)
row <- c(lightningFiresNumber, humanFiresNumber, totalAcerage, totalCost)
data_frame(col, row)
data_frame(row, col)
col <- c("lightningFiresNumber", "humanFiresNumber", "totalAcerage", "totalCost", stringsAsFactors=FALSE)
row <- c(lightningFiresNumber, humanFiresNumber, totalAcerage, totalCost)
data_frame(row, col)
data_frame(row, col, stringsAsFactors=FALSE)
data_frame(row, stringsAsFactors=FALSE)
data.frame(row, stringsAsFactors=FALSE)
data.frame(col,row, stringsAsFactors=FALSE)
data.frame(row, stringsAsFactors=FALSE)
export <- data.frame(row, stringsAsFactors=FALSE)
colnames(export, c("lightningFiresNumber", "humanFiresNumber", "totalAcerage", "totalCost") )
names(export) <- c("lightningFiresNumber", "humanFiresNumber", "totalAcerage", "totalCost") )
names(export) <- c("lightningFiresNumber", "humanFiresNumber", "totalAcerage", "totalCost")
export
totalAcerage
install.packages('jsonlite')
install.packages("jsonlite")
library(jsonlite)
exportJSON <- toJSON(export)
exportJSON
exportJSON <- toJSON(export, pretty=TRUE)
exportJSON
exportJSON
write(exportJSON, "exportJSON.JSON")
