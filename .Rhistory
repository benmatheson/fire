length(costArray)
unbox(costArray)
costArray <- vector(sizeCost$ESTIMATEDTOTALCOST)
unbox(costArray)
length(costArray)
costArray <- vector(sizeCost$ESTIMATEDTOTALCOST)
unbox(costArray)
costArray <-sizeCost$ESTIMATEDTOTALCOST
js <- toJSON(costArray)
js
row <- c(sysTime, lightningFiresNumber, humanFiresNumber, totalAcerage, totalCost, mostExpensiveNumber, largestFireNumber, mostExpensiveName, largestfireName, currentCount, js)
export <- data.frame(row, stringsAsFactors=FALSE)
names(export) <- c("systemTime", "lightningFiresNumber", "humanFiresNumber", "totalAcerage", "totalCost", "mostExpensiveNumber", "largestFireNumber", "mostExpensiveName", "largestfireName", "currentCount", "costArray")
export
exportJSON <- toJSON(export, pretty=TRUE)
write(exportJSON, "exportJSON.JSON")
totalFiresc
#removes the fires that don't have both cost and size
sizeCost <- filter(fires, ESTIMATEDTOTALCOST != 0 & ESTIMATEDTOTALACRES != 0)
costArray <-sizeCost$ESTIMATEDTOTALCOST
toJSON(costArray)
sizeArray <- sizeCost$ESTIMATEDTOTALACRES
toJSON(sizeArray)
nameArray <- as.vector(sizeCost$NAME)
toJSON(nameArray)
discoverArray <- sizeCost$DISCOVERYDATETIME
toJSON(discoverArray)
#Bring summary data into dataframe, export to JSON
#, sizeArray, nameArray, discoverArray, totalFiresc)
row <- c(sysTime, lightningFiresNumber, humanFiresNumber, totalAcerage, totalCost, mostExpensiveNumber, largestFireNumber, mostExpensiveName, largestfireName, currentCount, costArray, sizeArray, nameArray, discoverArray, totalFires)
export <- data.frame(row, stringsAsFactors=FALSE)
names(export) <- c("systemTime", "lightningFiresNumber", "humanFiresNumber", "totalAcerage", "totalCost", "mostExpensiveNumber", "largestFireNumber", "mostExpensiveName", "largestfireName", "currentCount", "costArray", "sizeArray", "nameArray", "discoverArray", "totalFires")
exportJSON <- toJSON(export, pretty=TRUE)
write(exportJSON, "exportJSON.JSON")
toJSON(sizeArray)
costArray <-sizeCost$ESTIMATEDTOTALCOST
toJSON(costArray)
sizeArray <- sizeCost$ESTIMATEDTOTALACRES
toJSON(sizeArray)
nameArray <- as.vector(sizeCost$NAME)
toJSON(nameArray)
discoverArray <- sizeCost$DISCOVERYDATETIME
toJSON(discoverArray)
row <- c(sysTime, lightningFiresNumber, humanFiresNumber, totalAcerage, totalCost, mostExpensiveNumber, largestFireNumber, mostExpensiveName, largestfireName, currentCount, costArray, sizeArray, nameArray, discoverArray, totalFires)
export <- data.frame(row, stringsAsFactors=FALSE)
names(export) <- c("systemTime", "lightningFiresNumber", "humanFiresNumber", "totalAcerage", "totalCost", "mostExpensiveNumber", "largestFireNumber", "mostExpensiveName", "largestfireName", "currentCount", "costArray", "sizeArray", "nameArray", "discoverArray", "totalFires")
exportJSON <- toJSON(export, pretty=TRUE)
write(exportJSON, "exportJSON.JSON")
push_git <- paste0("git add --all && git commit -m '",
as.character(Sys.time()),
"' && git push origin master")
costArr
costArray <-sizeCost$ESTIMATEDTOTALCOST
toJSON(costArray)
costArray <- toJSON(costArray)
sizeArray <-toJSON(sizeArray)
row <- c(sysTime, lightningFiresNumber, humanFiresNumber, totalAcerage, totalCost, mostExpensiveNumber, largestFireNumber, mostExpensiveName, largestfireName, currentCount, costArray, sizeArray, nameArray, discoverArray, totalFires)
export <- data.frame(row, stringsAsFactors=FALSE)
names(export) <- c("systemTime", "lightningFiresNumber", "humanFiresNumber", "totalAcerage", "totalCost", "mostExpensiveNumber", "largestFireNumber", "mostExpensiveName", "largestfireName", "currentCount", "costArray", "sizeArray", "nameArray", "discoverArray", "totalFires")
exportJSON <- toJSON(export, pretty=TRUE)
write(exportJSON, "exportJSON.JSON")
costArray <-sizeCost$ESTIMATEDTOTALCOST
costArray <- toJSON(costArray)
sizeArray <- sizeCost$ESTIMATEDTOTALACRES
sizeArray <-toJSON(sizeArray)
nameArray <- sizeCost$NAME
nameArray <- toJSON(nameArray)
discoverArray <- sizeCost$DISCOVERYDATETIME
discoverArray <- toJSON(discoverArray)
row <- c(sysTime, lightningFiresNumber, humanFiresNumber, totalAcerage, totalCost, mostExpensiveNumber, largestFireNumber, mostExpensiveName, largestfireName, currentCount, costArray, sizeArray, nameArray, discoverArray, totalFires)
export <- data.frame(row, stringsAsFactors=FALSE)
names(export) <- c("systemTime", "lightningFiresNumber", "humanFiresNumber", "totalAcerage", "totalCost", "mostExpensiveNumber", "largestFireNumber", "mostExpensiveName", "largestfireName", "currentCount", "costArray", "sizeArray", "nameArray", "discoverArray", "totalFires")
exportJSON <- toJSON(export, pretty=TRUE)
write(exportJSON, "exportJSON.JSON")
nameArray <- as.character(sizeCost$NAME)
nameArray <- toJSON(nameArray)
row <- c(sysTime, lightningFiresNumber, humanFiresNumber, totalAcerage, totalCost, mostExpensiveNumber, largestFireNumber, mostExpensiveName, largestfireName, currentCount, costArray, sizeArray, nameArray, discoverArray, totalFires)
export <- data.frame(row, stringsAsFactors=FALSE)
names(export) <- c("systemTime", "lightningFiresNumber", "humanFiresNumber", "totalAcerage", "totalCost", "mostExpensiveNumber", "largestFireNumber", "mostExpensiveName", "largestfireName", "currentCount", "costArray", "sizeArray", "nameArray", "discoverArray", "totalFires")
exportJSON <- toJSON(export, pretty=TRUE)
write(exportJSON, "exportJSON.JSON")
nameArray
nameArray <- as.character(sizeCost$NAME)
nameArray <- toJSON(nameArray)
nameArray
discoverArray <- sizeCost$DISCOVERYDATETIME
discoverArray <- toJSON(discoverArray)
discoverArray
discoverArray <- sizeCost$DISCOVERYDATETIME
sizeArray <- sizeCost$ESTIMATEDTOTALACRES
sizeArray
?gsub
sizeArray <- sizeCost$ESTIMATEDTOTALACRES
sizeArray <-toJSON(sizeArray)
sizeArray <- gsub('"',"",sizeArray,)
sizeArray
sizeArray <- gsub('"',"",sizeArray)
sizeArray
sizeArray <- sizeCost$ESTIMATEDTOTALACRES
sizeArray <-toJSON(sizeArray)
sizeArray
sizeArray <- gsub('"',"",sizeArray)
sizeArray
row <- c(sysTime, lightningFiresNumber, humanFiresNumber, totalAcerage, totalCost, mostExpensiveNumber, largestFireNumber, mostExpensiveName, largestfireName, currentCount, costArray, sizeArray, nameArray, discoverArray, totalFires)
export <- data.frame(row, stringsAsFactors=FALSE)
names(export) <- c("systemTime", "lightningFiresNumber", "humanFiresNumber", "totalAcerage", "totalCost", "mostExpensiveNumber", "largestFireNumber", "mostExpensiveName", "largestfireName", "currentCount", "costArray", "sizeArray", "nameArray", "discoverArray", "totalFires")
exportJSON <- toJSON(export, pretty=TRUE)
write(exportJSON, "exportJSON.JSON")
sizeArray
nameArray <- toJSON(nameArray)
nameArray
sizeArray <- sizeCost$ESTIMATEDTOTALACRES
sizeArray <-toJSON(sizeArray)
sizeArray
typeof(sizeArray)
as.matrix(sizeArray)
sizeArray <- as.matrix(sizeArray)
sizeArray
typeof(sizeArray)
sizeArray <- sizeCost$ESTIMATEDTOTALACRES
sizeArray <-toJSON(sizeArray)
sizeArray
sizeArray <- gsub('"',"",sizeArray)
sizeArray
download.file("https://rawgit.com/benmatheson/fire/master/exportJSON.JSON", "local_download.json")
largestFires
library(dplyr)
library(readxl)
library(sp)
library(rgdal)
library(geojsonio)
library(rjson)
library(jsonlite)
#https://github.com/OpenGov/Leaflet.bubble
#how to make geojson
#https://recology.info/2015/04/geojson-io/
#crontab via this https://ole.michelsen.dk/blog/schedule-jobs-with-crontab-on-mac-osx.html
fires <- download.file("https://fire.ak.blm.gov/content/aicc/sitreport/sit%20query.xlsx", "query.xlsx")
fires <- read_xlsx("query.xlsx")
fires <- as.data.frame(fires)
firesSP <- as.data.frame(fires)
coordinates(firesSP) <- ~ LONGITUDE + LATITUDE
writeOGR(firesSP, 'fires.geojson',layer="fires", driver='GeoJSON')
####Parse the fire Dataframe#####
#this checks to see if there is an OUTDATE on the fire
fires$burning <- is.na(fires$OUTDATE)
currentFires <- filter(fires, burning==TRUE)
currentCount <- nrow(currentFires)
outFires <- filter(fires, burning==FALSE)
humanFires <- filter(fires, GENERALCAUSE=="Human")
humanFiresNumber <- count(humanFires)
lightningFires <- filter(fires, GENERALCAUSE=="Lightning")
lightningFiresNumber <- count(lightningFires)
totalFires <- as.numeric(lightningFiresNumber + humanFiresNumber)
#Most expensive current fires
mostExpensive <- arrange(fires, desc(ESTIMATEDTOTALCOST))
mostExpensive <- mostExpensive[1:10,]
mostExpensiveNumber <- mostExpensive[1,18]
mostExpensiveName <- mostExpensive[1,2]
largestFires <- arrange(fires, desc(ESTIMATEDTOTALACRES))
largestFires <- largestFires[1:10,]
largestFireNumber <- largestFires[1,11]
largestfireName <- largestFires[1,2]
largestFires
lg <- toJSON(largestFires)
lg
View(lg)
library(dplyr)
library(readxl)
library(sp)
library(rgdal)
library(geojsonio)
library(rjson)
library(jsonlite)
#https://github.com/OpenGov/Leaflet.bubble
#how to make geojson
#https://recology.info/2015/04/geojson-io/
#crontab via this https://ole.michelsen.dk/blog/schedule-jobs-with-crontab-on-mac-osx.html
fires <- download.file("https://fire.ak.blm.gov/content/aicc/sitreport/sit%20query.xlsx", "query.xlsx")
fires <- read_xlsx("query.xlsx")
fires <- as.data.frame(fires)
firesSP <- as.data.frame(fires)
coordinates(firesSP) <- ~ LONGITUDE + LATITUDE
writeOGR(firesSP, 'fires.geojson',layer="fires", driver='GeoJSON')
####Parse the fire Dataframe#####
#this checks to see if there is an OUTDATE on the fire
fires$burning <- is.na(fires$OUTDATE)
currentFires <- filter(fires, burning==TRUE)
currentCount <- nrow(currentFires)
outFires <- filter(fires, burning==FALSE)
humanFires <- filter(fires, GENERALCAUSE=="Human")
humanFiresNumber <- count(humanFires)
lightningFires <- filter(fires, GENERALCAUSE=="Lightning")
lightningFiresNumber <- count(lightningFires)
totalFires <- as.numeric(lightningFiresNumber + humanFiresNumber)
#Most expensive current fires
mostExpensive <- arrange(fires, desc(ESTIMATEDTOTALCOST))
mostExpensive <- mostExpensive[1:10,]
mostExpensiveNumber <- mostExpensive[1,18]
mostExpensiveName <- mostExpensive[1,2]
largestFires <- arrange(fires, desc(ESTIMATEDTOTALACRES))
largestFires <- largestFires[1:10,]
largestFireNumber <- largestFires[1,11]
largestfireName <- largestFires[1,2]
totalAcerage <- sum(fires$ESTIMATEDTOTALACRES, na.rm=TRUE)
source('~/fire/fire_script.R', echo=TRUE)
Sys.Date()
sysDate <- paste0(Sys.Date())
sysDate
unlink(".RData")
library(dplyr)
library(readxl)
library(sp)
library(rgdal)
library(geojsonio)
library(rjson)
library(jsonlite)
library(lubridate)
#https://github.com/OpenGov/Leaflet.bubble
#how to make geojson
#https://recology.info/2015/04/geojson-io/
#crontab via this https://ole.michelsen.dk/blog/schedule-jobs-with-crontab-on-mac-osx.html
getwd()
#setwd("fire")
fires <- download.file("https://fire.ak.blm.gov/content/aicc/sitreport/sit%20query.xlsx", "query.xlsx")
fires <- read_xlsx("query.xlsx")
fires <- as.data.frame(fires)
#firesSP <- as.data.frame(fires)
#coordinates(firesSP) <- ~ LONGITUDE + LATITUDE
#writeOGR(firesSP, 'fires.geojson',layer="fires", driver='GeoJSON')
#load the CSV for history
fireHistory <- download.file("https://fire.ak.blm.gov/content/aicc/Statistics%20Directory/Alaska%20Daily%20Stats%20-%202004%20to%20Present.csv", "fire_history.csv")
fireHistory <- read.csv("fire_history.csv")
fireHistory <- as.data.frame(fireHistory)
head(fireHistory)
#make the fire history a date in YYYY-MM-DD format
fireHistory$SitReportDate <- as.character(fireHistory$SitReportDate)
slice1 <- substr(fireHistory$SitReportDate, 1,4)
slice2 <- substr(fireHistory$SitReportDate, 5,6)
slice3 <- substr(fireHistory$SitReportDate, 7,8)
fireHistory$SitReportDate<- paste(slice1, slice2, slice3, sep="-")
#fixed the bad thign???***here
fireHistory <- filter(fireHistory, Month >5)
fireHistory$SitReportDate <- gsub("2107-06-12","2017-06-12", fireHistory$SitReportDate)
#create julien date
fireHistory$jd <- yday(fireHistory$SitReportDate)
fireHistory2017 <- filter(fireHistory, FireSeason ==2017) %>% arrange(SitReportDate)
fireHistoryHumanAcres <- toJSON(fireHistory2017$HumanAcres)
fireHistoryLightningAcres <- toJSON(fireHistory2017$LightningAcres)
fireHistoryHumanFires<- toJSON(fireHistory2017$HumanFires)
fireHistoryLightningFires <- toJSON(fireHistory2017$LightningFires)
fireHistoryDates <- filter(fireHistory, jd >150 & jd<200 &FireSeason ==2016) %>% arrange((jd))
fireHistoryDates <- toJSON(fireHistoryDates$SitReportDate)
#think this returns just the vector
fireHistory2017Acres <- toJSON(filter(fireHistory, FireSeason == 2017, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2016Acres <- toJSON(filter(fireHistory, FireSeason == 2016, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2015Acres <- toJSON(filter(fireHistory, FireSeason == 2015, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2014Acres <- toJSON(filter(fireHistory, FireSeason == 2014, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2013Acres <- toJSON(filter(fireHistory, FireSeason == 2013, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2012Acres <- toJSON(filter(fireHistory, FireSeason == 2012, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2011Acres <- toJSON(filter(fireHistory, FireSeason == 2011, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2017Acres
fireHistory2013Acres
####Parse the fire Dataframe#####
#remove the problematic "{}" in the
fires$ESTIMATEDTOTALACRES <- gsub("}","",fires$ESTIMATEDTOTALACRES)
fires$ESTIMATEDTOTALACRES <-  gsub("\\{","",fires$ESTIMATEDTOTALACRES)
fires$ESTIMATEDTOTALACRES <- as.numeric(fires$ESTIMATEDTOTALACRES)
#as.numeric (as.character(fires$ESTIMATEDTOTACRES, stringsAsFactors = FALSE ))
typeof(fires$ESTIMATEDTOTALACRES)
#this checks to see if there is an OUTDATE on the fire
fires$burning <- is.na(fires$OUTDATE)
currentFires <- filter(fires, burning==TRUE)
currentCount <- nrow(currentFires)
outFires <- filter(fires, burning==FALSE)
humanFires <- filter(fires, GENERALCAUSE=="Human")
humanFiresNumber <- count(humanFires)
lightningFires <- filter(fires, GENERALCAUSE=="Lightning")
lightningFiresNumber <- count(lightningFires)
totalFires <- as.numeric(lightningFiresNumber + humanFiresNumber)
#Most expensive current fires
mostExpensive <- filter(fires, ESTIMATEDTOTALCOST != 0)
View(mostExpensive)
largestFires <- arrange(fires, desc(ESTIMATEDTOTALACRES))
largestFires <- largestFires[1:10,]
largestFireNumber <- largestFires[1,11]
largestfireName <- largestFires[1,2]
largestFires <- filter(fires, ESTIMATEDTOTALACRES != 0)
largestFires <- arrange(fires, desc(ESTIMATEDTOTALACRES))
largestFires <- largestFires[1:10,]
largestFireNumber <- largestFires[1,11]
costArray <-fires$ESTIMATEDTOTALCOST
costArray
sizeArray <- fires$ESTIMATEDTOTALACRES
sizeArray <- arrange(sizeArray, desc(ESTIMATEDTOTALACRES))
sizeArray <- fires$ESTIMATEDTOTALACRES
sizeArray <- arrange(desc(sizeArray))
largestFires <- filter(fires, ESTIMATEDTOTALACRES != 0)
largestFires <- arrange(fires, desc(ESTIMATEDTOTALACRES))
largestFires <- largestFires[1:10,]
largestFires
largestFireNames <- largestFires[,2]
largestFires
largestFiresNames
largestFires <- filter(fires, ESTIMATEDTOTALACRES != 0)
largestFires <- arrange(fires, desc(ESTIMATEDTOTALACRES))
largestFires <- largestFires[1:10,]
largestFireNames <- largestFires[,2]
largestFiresNames
largestFireNames
largestFiresNumbers <- largestFires[,11]
largestFiresNumbers
largestFiresNumbers <- toJSON(largestFiresNumbers)
largestFiresNumbers <- toJSON(largestFiresNumbers)
largestFiresNames <- toJSON(largestFiresNames)
largestFiresNames <- largestFires[,2]
largestFiresNames <- toJSON(largestFiresNames)
unlink(".RData")
library(dplyr)
library(readxl)
library(sp)
library(rgdal)
library(geojsonio)
library(rjson)
library(jsonlite)
library(lubridate)
#https://github.com/OpenGov/Leaflet.bubble
#how to make geojson
#https://recology.info/2015/04/geojson-io/
#crontab via this https://ole.michelsen.dk/blog/schedule-jobs-with-crontab-on-mac-osx.html
getwd()
#setwd("fire")
fires <- download.file("https://fire.ak.blm.gov/content/aicc/sitreport/sit%20query.xlsx", "query.xlsx")
fires <- read_xlsx("query.xlsx")
fires <- as.data.frame(fires)
#firesSP <- as.data.frame(fires)
#coordinates(firesSP) <- ~ LONGITUDE + LATITUDE
#writeOGR(firesSP, 'fires.geojson',layer="fires", driver='GeoJSON')
#load the CSV for history
fireHistory <- download.file("https://fire.ak.blm.gov/content/aicc/Statistics%20Directory/Alaska%20Daily%20Stats%20-%202004%20to%20Present.csv", "fire_history.csv")
fireHistory <- read.csv("fire_history.csv")
fireHistory <- as.data.frame(fireHistory)
head(fireHistory)
#make the fire history a date in YYYY-MM-DD format
fireHistory$SitReportDate <- as.character(fireHistory$SitReportDate)
slice1 <- substr(fireHistory$SitReportDate, 1,4)
slice2 <- substr(fireHistory$SitReportDate, 5,6)
slice3 <- substr(fireHistory$SitReportDate, 7,8)
fireHistory$SitReportDate<- paste(slice1, slice2, slice3, sep="-")
#fixed the bad thign???***here
fireHistory <- filter(fireHistory, Month >5)
fireHistory$SitReportDate <- gsub("2107-06-12","2017-06-12", fireHistory$SitReportDate)
#create julien date
fireHistory$jd <- yday(fireHistory$SitReportDate)
fireHistory2017 <- filter(fireHistory, FireSeason ==2017) %>% arrange(SitReportDate)
fireHistoryHumanAcres <- toJSON(fireHistory2017$HumanAcres)
fireHistoryLightningAcres <- toJSON(fireHistory2017$LightningAcres)
fireHistoryHumanFires<- toJSON(fireHistory2017$HumanFires)
fireHistoryLightningFires <- toJSON(fireHistory2017$LightningFires)
#**JD FIX?
fireHistoryDates <- filter(fireHistory, jd >150 & jd<185 &FireSeason ==2016) %>% arrange((jd))
fireHistoryDates <- toJSON(fireHistoryDates$SitReportDate)
#think this returns just the vector
fireHistory2017Acres <- toJSON(filter(fireHistory, FireSeason == 2017, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2016Acres <- toJSON(filter(fireHistory, FireSeason == 2016, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2015Acres <- toJSON(filter(fireHistory, FireSeason == 2015, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2014Acres <- toJSON(filter(fireHistory, FireSeason == 2014, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2013Acres <- toJSON(filter(fireHistory, FireSeason == 2013, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2012Acres <- toJSON(filter(fireHistory, FireSeason == 2012, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2011Acres <- toJSON(filter(fireHistory, FireSeason == 2011, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2017Acres
fireHistory2013Acres
####Parse the fire Dataframe#####
#remove the problematic "{}" in the
fires$ESTIMATEDTOTALACRES <- gsub("}","",fires$ESTIMATEDTOTALACRES)
fires$ESTIMATEDTOTALACRES <-  gsub("\\{","",fires$ESTIMATEDTOTALACRES)
fires$ESTIMATEDTOTALACRES <- as.numeric(fires$ESTIMATEDTOTALACRES)
#as.numeric (as.character(fires$ESTIMATEDTOTACRES, stringsAsFactors = FALSE ))
typeof(fires$ESTIMATEDTOTALACRES)
#this checks to see if there is an OUTDATE on the fire
fires$burning <- is.na(fires$OUTDATE)
currentFires <- filter(fires, burning==TRUE)
currentCount <- nrow(currentFires)
outFires <- filter(fires, burning==FALSE)
humanFires <- filter(fires, GENERALCAUSE=="Human")
humanFiresNumber <- count(humanFires)
lightningFires <- filter(fires, GENERALCAUSE=="Lightning")
lightningFiresNumber <- count(lightningFires)
totalFires <- as.numeric(lightningFiresNumber + humanFiresNumber)
#Most expensive current fires
mostExpensive <- filter(fires, ESTIMATEDTOTALCOST != 0)
mostExpensive <- arrange(fires, desc(ESTIMATEDTOTALCOST))
mostExpensive <- mostExpensive[1:10,]
mostExpensiveNumber <- mostExpensive[1,18]
mostExpensiveName <- mostExpensive[1,2]
largestFires <- filter(fires, ESTIMATEDTOTALACRES != 0)
largestFires <- arrange(fires, desc(ESTIMATEDTOTALACRES))
largestFires <- largestFires[1:10,]
largestFiresNames <- largestFires[,2]
largestFiresNumbers <- largestFires[,11]
largestFireNumber <- largestFires[1,11]
largestfireName <- largestFires[1,2]
largestFiresNumbers <- toJSON(largestFiresNumbers)
largestFiresNames <- toJSON(largestFiresNames)
totalAcerage <- sum(fires$ESTIMATEDTOTALACRES, na.rm=TRUE)
totalCost <- sum(fires$ESTIMATEDTOTALCOST, na.rm=TRUE)
sysTime <- paste0(Sys.time())
sysDate <- paste0(Sys.Date())
costArray <-fires$ESTIMATEDTOTALCOST
costArray <- toJSON(costArray)
sizeArray <- filter(fires, ESTIMATEDTOTALACRES != 0)
sizeArray <- sizeArray$ESTIMATEDTOTALACRES
sizeArray <-toJSON(sizeArray)
sizeArray <- gsub('"',"",sizeArray)
unlink(".RData")
library(dplyr)
library(readxl)
library(sp)
library(rgdal)
library(geojsonio)
library(rjson)
library(jsonlite)
library(lubridate)
#https://github.com/OpenGov/Leaflet.bubble
#how to make geojson
#https://recology.info/2015/04/geojson-io/
#crontab via this https://ole.michelsen.dk/blog/schedule-jobs-with-crontab-on-mac-osx.html
getwd()
setwd("fire")
fires <- download.file("https://fire.ak.blm.gov/content/aicc/sitreport/sit%20query.xlsx", "query.xlsx")
fires <- read_xlsx("query.xlsx")
fires <- as.data.frame(fires)
#firesSP <- as.data.frame(fires)
#coordinates(firesSP) <- ~ LONGITUDE + LATITUDE
#writeOGR(firesSP, 'fires.geojson',layer="fires", driver='GeoJSON')
#load the CSV for history
fireHistory <- download.file("https://fire.ak.blm.gov/content/aicc/Statistics%20Directory/Alaska%20Daily%20Stats%20-%202004%20to%20Present.csv", "fire_history.csv")
fireHistory <- read.csv("fire_history.csv")
fireHistory <- as.data.frame(fireHistory)
head(fireHistory)
#make the fire history a date in YYYY-MM-DD format
fireHistory$SitReportDate <- as.character(fireHistory$SitReportDate)
slice1 <- substr(fireHistory$SitReportDate, 1,4)
slice2 <- substr(fireHistory$SitReportDate, 5,6)
slice3 <- substr(fireHistory$SitReportDate, 7,8)
fireHistory$SitReportDate<- paste(slice1, slice2, slice3, sep="-")
#fixed the bad thign???***here
fireHistory <- filter(fireHistory, Month >5)
fireHistory$SitReportDate <- gsub("2107-06-12","2017-06-12", fireHistory$SitReportDate)
#create julien date
fireHistory$jd <- yday(fireHistory$SitReportDate)
fireHistory2017 <- filter(fireHistory, FireSeason ==2017) %>% arrange(SitReportDate)
fireHistoryHumanAcres <- toJSON(fireHistory2017$HumanAcres)
fireHistoryLightningAcres <- toJSON(fireHistory2017$LightningAcres)
fireHistoryHumanFires<- toJSON(fireHistory2017$HumanFires)
fireHistoryLightningFires <- toJSON(fireHistory2017$LightningFires)
#**JD FIX?
fireHistoryDates <- filter(fireHistory, jd >150 & jd<185 &FireSeason ==2016) %>% arrange((jd))
fireHistoryDates <- toJSON(fireHistoryDates$SitReportDate)
#think this returns just the vector
fireHistory2017Acres <- toJSON(filter(fireHistory, FireSeason == 2017, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2016Acres <- toJSON(filter(fireHistory, FireSeason == 2016, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2015Acres <- toJSON(filter(fireHistory, FireSeason == 2015, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2014Acres <- toJSON(filter(fireHistory, FireSeason == 2014, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2013Acres <- toJSON(filter(fireHistory, FireSeason == 2013, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2012Acres <- toJSON(filter(fireHistory, FireSeason == 2012, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2011Acres <- toJSON(filter(fireHistory, FireSeason == 2011, jd >150) %>% arrange((jd))%>% .$TotalAcres)
fireHistory2017Acres
fireHistory2013Acres
####Parse the fire Dataframe#####
#remove the problematic "{}" in the
fires$ESTIMATEDTOTALACRES <- gsub("}","",fires$ESTIMATEDTOTALACRES)
fires$ESTIMATEDTOTALACRES <-  gsub("\\{","",fires$ESTIMATEDTOTALACRES)
fires$ESTIMATEDTOTALACRES <- as.numeric(fires$ESTIMATEDTOTALACRES)
#as.numeric (as.character(fires$ESTIMATEDTOTACRES, stringsAsFactors = FALSE ))
typeof(fires$ESTIMATEDTOTALACRES)
#this checks to see if there is an OUTDATE on the fire
fires$burning <- is.na(fires$OUTDATE)
currentFires <- filter(fires, burning==TRUE)
currentCount <- nrow(currentFires)
outFires <- filter(fires, burning==FALSE)
humanFires <- filter(fires, GENERALCAUSE=="Human")
humanFiresNumber <- count(humanFires)
lightningFires <- filter(fires, GENERALCAUSE=="Lightning")
lightningFiresNumber <- count(lightningFires)
totalFires <- as.numeric(lightningFiresNumber + humanFiresNumber)
#Most expensive current fires
mostExpensive <- filter(fires, ESTIMATEDTOTALCOST != 0)
mostExpensive <- arrange(fires, desc(ESTIMATEDTOTALCOST))
mostExpensive <- mostExpensive[1:10,]
mostExpensiveNumber <- mostExpensive[1,18]
mostExpensiveName <- mostExpensive[1,2]
largestFires <- filter(fires, ESTIMATEDTOTALACRES != 0)
largestFires <- arrange(fires, desc(ESTIMATEDTOTALACRES))
largestFires <- largestFires[1:10,]
largestFiresNames <- largestFires[,2]
largestFiresNumbers <- largestFires[,11]
largestFireNumber <- largestFires[1,11]
largestfireName <- largestFires[1,2]
largestFiresNumbers <- toJSON(largestFiresNumbers)
largestFiresNames <- toJSON(largestFiresNames)
totalAcerage <- sum(fires$ESTIMATEDTOTALACRES, na.rm=TRUE)
totalCost <- sum(fires$ESTIMATEDTOTALCOST, na.rm=TRUE)
sysTime <- paste0(Sys.time())
sysDate <- paste0(Sys.Date())
costArray <-fires$ESTIMATEDTOTALCOST
costArray <- toJSON(costArray)
sizeArray <- filter(fires, ESTIMATEDTOTALACRES != 0)
sizeArray <- sizeArray$ESTIMATEDTOTALACRES
sizeArray <-toJSON(sizeArray)
sizeArray <- gsub('"',"",sizeArray)
sizeArray
